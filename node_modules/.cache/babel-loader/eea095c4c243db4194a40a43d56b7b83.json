{"ast":null,"code":"var _jsxFileName = \"/Users/mahidharreddyvaka/Desktop/WeatherApp/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../css/card.css';\nimport sunnyBackground from '../assets/wind.gif';\nimport cloudyBackground from '../assets/thunder.gif';\nimport rainyBackground from '../assets/rain.gif';\nimport snowyBackground from '../assets/sunrise.gif';\nimport defaultBackground from '../assets/sunrise.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const [data, setData] = useState({\n    city: 'Pune',\n    temp: 0,\n    temp_max: 0,\n    temp_min: 0,\n    humidity: 0,\n    sunrise: 0,\n    sunset: 0,\n    country: '',\n    desc: ''\n  });\n  const weatherBackgrounds = {\n    'Clear': sunnyBackground,\n    'Clouds': cloudyBackground,\n    'Rain': rainyBackground,\n    'Snow': snowyBackground\n  };\n\n  const updateBackgroundImage = description => {\n    if (weatherBackgrounds[description]) {\n      document.querySelector('.card').style.backgroundImage = `url(${weatherBackgrounds[description]})`;\n    } else {\n      // Use the default background if the weather condition is not found in the mapping\n      document.querySelector('.card').style.backgroundImage = `url(${defaultBackground})`;\n    }\n  };\n\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${data.city}&units=metric&appid=YOUR_API_KEY`).then(response => {\n      const description = response.data.weather[0].main;\n      setData({\n        city: response.data.name,\n        temp: response.data.main.temp,\n        temp_max: response.data.main.temp_max,\n        temp_min: response.data.main.temp_min,\n        humidity: response.data.main.humidity,\n        sunrise: response.data.sys.sunrise,\n        sunset: response.data.sys.sunset,\n        country: response.data.sys.country,\n        desc: description\n      });\n      updateBackgroundImage(description);\n    });\n  }, [data.city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"circles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputData\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"inputField\",\n            placeholder: \"Enter City Name\",\n            onChange: e => setData({ ...data,\n              city: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-sharp fa-solid fa-location-dot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), \" \", data.city, \" \", data.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [data.temp, \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"boxes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"65nvPrB9y1EKuTU4/BRIlfBhB48=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","sunnyBackground","cloudyBackground","rainyBackground","snowyBackground","defaultBackground","Card","data","setData","city","temp","temp_max","temp_min","humidity","sunrise","sunset","country","desc","weatherBackgrounds","updateBackgroundImage","description","document","querySelector","style","backgroundImage","get","then","response","weather","main","name","sys","e","target","value"],"sources":["/Users/mahidharreddyvaka/Desktop/WeatherApp/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport '../css/card.css';\n\nimport sunnyBackground from '../assets/wind.gif';\nimport cloudyBackground from '../assets/thunder.gif';\nimport rainyBackground from '../assets/rain.gif';\nimport snowyBackground from '../assets/sunrise.gif';\nimport defaultBackground from '../assets/sunrise.gif';\n\nfunction Card() {\n    const [data, setData] = useState({\n        city: 'Pune',\n        temp: 0,\n        temp_max: 0,\n        temp_min: 0,\n        humidity: 0,\n        sunrise: 0,\n        sunset: 0,\n        country: '',\n        desc: '',\n    });\n\n    const weatherBackgrounds = {\n        'Clear': sunnyBackground,\n        'Clouds': cloudyBackground,\n        'Rain': rainyBackground,\n        'Snow': snowyBackground,\n    };\n\n    const updateBackgroundImage = (description) => {\n        if (weatherBackgrounds[description]) {\n            document.querySelector('.card').style.backgroundImage = `url(${weatherBackgrounds[description]})`;\n        } else {\n            // Use the default background if the weather condition is not found in the mapping\n            document.querySelector('.card').style.backgroundImage = `url(${defaultBackground})`;\n        }\n    };\n\n    useEffect(() => {\n        axios\n            .get(\n                `https://api.openweathermap.org/data/2.5/weather?q=${data.city}&units=metric&appid=YOUR_API_KEY`\n            )\n            .then((response) => {\n                const description = response.data.weather[0].main;\n                setData({\n                    city: response.data.name,\n                    temp: response.data.main.temp,\n                    temp_max: response.data.main.temp_max,\n                    temp_min: response.data.main.temp_min,\n                    humidity: response.data.main.humidity,\n                    sunrise: response.data.sys.sunrise,\n                    sunset: response.data.sys.sunset,\n                    country: response.data.sys.country,\n                    desc: description,\n                });\n\n                updateBackgroundImage(description);\n            });\n    }, [data.city]);\n\n    return (\n        <div>\n            <div className=\"area\">\n                <ul className=\"circles\">\n                    {/* Circles for background */}\n                </ul>\n            </div>\n            <div className=\"container\">\n                <div className=\"card\">\n                    <div className=\"inputData\">\n                        <input\n                            type=\"text\"\n                            className=\"inputField\"\n                            placeholder=\"Enter City Name\"\n                            onChange={(e) => setData({ ...data, city: e.target.value })}\n                        />\n                    </div>\n\n                    <div className=\"city\">\n                        <h3><i className=\"fa-sharp fa-solid fa-location-dot\"></i> {data.city} {data.country}</h3>\n                    </div>\n                    <div className=\"info\">\n                        <h2>{data.temp} Â°C</h2>\n                    </div>\n                    <div className=\"boxes\">\n                        {/* Other weather data boxes */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}